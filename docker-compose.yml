x-runner-common: &runner-common
  build: 
    context: .
    dockerfile: .devcontainer/Dockerfile
  volumes: 
    - ./requirements.txt:/requirements.txt
    - ./scripts:/opt/airflow/scripts
    - ./data_lake:/opt/airflow/data_lake
  environment:
    HOME: /opt/airflow
  image: my-airflow:2.7.3-python3.9 

x-airflow-common: &airflow-common
  build: 
    context: .
    dockerfile: .devcontainer/Dockerfile
  image: my-airflow:2.7.3-python3.9
  environment:
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
  volumes:
    - ./dags:/opt/airflow/dags
    - ./scripts:/opt/airflow/scripts
    - ./logs:/opt/airflow/logs        
    - ./plugins:/opt/airflow/plugins
    - ./data_lake:/opt/airflow/data_lake
    - ./requirements.txt:/requirements.txt
  depends_on:
    - postgres
    - redis

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
  redis:
    image: redis:7
    ports:
      - "6379:6379"

  airflow-worker:
    <<: *airflow-common
    image: my-airflow-worker
    command: celery worker

  airflow-webserver:
    <<: *airflow-common
    ports:
      - "8080:8080"
    image: my-airflow-webserver
    command: webserver

  airflow-scheduler:
    <<: *airflow-common
    image: my-airflow-scheduler
    command: scheduler

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: -c "airflow db migrate && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"
    image: my-airflow-init
    depends_on:
      - postgres

  spark-pipeline:
      build:
        context: .
        dockerfile: .devcontainer/Dockerfile
      volumes:
        - ./data_lake:/app/data_lake
        - ./scripts:/app/scripts
      environment:
        - PYSPARK_PYTHON=python3
      command: >
        bash -c "python3 scripts/extract_breweries.py &&
                python3 scripts/transform_breweries.py &&
                python3 scripts/aggregate_breweries.py"
      entrypoint: /bin/bash
      
  spark-runner-extract:
    <<: *runner-common
    entrypoint: ""
    image: my-airflow-extract
    command: python3 scripts/extract_breweries.py
  spark-runner-transform:
    <<: *runner-common
    entrypoint: ""
    image: my-airflow-transform
    command: python3 scripts/transform_breweries.py
  spark-runner-aggregate:
    <<: *runner-common
    entrypoint: ""
    image: my-airflow-aggregate
    command: python3 scripts/aggregate_breweries.py

volumes:
  postgres-db-volume:
